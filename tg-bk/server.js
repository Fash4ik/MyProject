const express = require('express');
const axios = require('axios');
const cors = require('cors');

const app = express();
const PORT = 5000;

const TELEGRAM_TOKEN = '7692523461:AAE4ngt6Tl97Q1GhODWv822YaX0hF01Qjpo';
const CHAT_ID = '697313070';

app.use(cors({
  origin: '*', 
  methods: ['GET', 'POST'],
  credentials: true
}));

app.use(express.json());


app.post('/send-message', async (req, res) => {
  const { name, email, phone, comment } = req.body;

  

  const message = `
üì© <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:</b>

üë§ –ò–º—è: ${name}
üìß Email: ${email}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}
  `;

  try {
    await axios.post(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: message,
      parse_mode: 'HTML',
    });

    res.json({ status: 'ok' });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:", error);
    res.status(500).json({ status: 'error', message: error.message });
  }
});


app.post('/send-reservation', async (req, res) => {
  const { name, phone, tableId, startTime, endTime } = req.body;

  
  const formatDateTime = (dateTimeStr) => {
    try {
      const date = new Date(dateTimeStr);
      return date.toLocaleString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
      });
    } catch {
      return dateTimeStr; 
    }
  };

  const formattedStart = formatDateTime(startTime);
  const formattedEnd = formatDateTime(endTime);

  const message = `
ü™ë <b>–ù–æ–≤–∞—è –±—Ä–æ–Ω—å —Å—Ç–æ–ª–∏–∫–∞:</b>

üë§ –§–ò–û: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
ü™ë –°—Ç–æ–ª ‚Ññ: ${tableId}
‚è∞ –í—Ä–µ–º—è: —Å ${formattedStart} –¥–æ ${formattedEnd}
  `;

  try {
    await axios.post(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: message,
      parse_mode: 'HTML',
    });

    res.json({ status: 'ok' });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±—Ä–æ–Ω–∏ –≤ Telegram:", error);
    res.status(500).json({ status: 'error', message: error.message });
  }
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
